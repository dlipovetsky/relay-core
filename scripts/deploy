#!/usr/bin/env bash
set -euo pipefail

if [ -z "${NEBULA_EMAIL:-}" ] || [ -z "${NEBULA_PASSWORD:-}" ] || [ -z "${GITHUB_TOKEN:-}" ] || [ -z "${NEBULA_WORKFLOW:-}" ] || [ -z "${VERSION:-}" ] || [ "${NO_DOCKER_PUSH:-}" == "yes" ]; then
    echo "Branch ${TRAVIS_BRANCH} has no workflow configuration. Skipping deploy."
    exit 0
fi

mkdir -p .deploy
curl -LJ -o .deploy/relay \
    -H 'Accept: application/octet-stream' \
    "https://api.github.com/repos/puppetlabs/relay/releases/assets/$( curl -s "https://api.github.com/repos/puppetlabs/relay/releases/25072016?access_token=${GITHUB_TOKEN}" | jq -r '.assets[] | select(.name | endswith("-linux-amd64")) | .id' )?access_token=${GITHUB_TOKEN}"
chmod +x .deploy/relay

mkdir -p ~/.config/nebula
echo 'apiHostAddr: https://api.stage.nebula.puppet.net' >~/.config/nebula/config.yaml

echo -n "${NEBULA_PASSWORD}" | .deploy/relay login -e "${NEBULA_EMAIL}" -p
echo -n "${VERSION}" | .deploy/relay secret set -w "${NEBULA_WORKFLOW}" -k tasks.image.tag -v
.deploy/relay workflow run -n "${NEBULA_WORKFLOW}"
